---
import BaseHead from "@/components/BaseHead.astro";
import { getLangFromUrl, useTranslations, getLangFromPathname, generateLocalizedPaths } from "@/i18n/utils";
import { SITE_TITLE, SITE_DESCRIPTION } from "@/consts";
import { SITE_URL, SITE_PORT } from "astro:env/client";
import "@/styles/global.css";
import { getCollection } from "astro:content";
import { NavbarPlexicus, FooterPlexicus } from "shared-ui";
import HeroMain from "@/components/home/hero";
import FeaturedArticles from "@/components/home/featured";
import LatestArticles from "@/components/home/latest";
const lang = getLangFromUrl(Astro.url);

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
).filter((content) => {
  console.log({ content });
  return getLangFromPathname(`/${content.id}`) === lang;
});
console.log({ posts });
export async function getStaticPaths() {
  const pages = await getCollection("blog");

  const paths = generateLocalizedPaths({ pages });

  return paths;
}

const t = useTranslations(lang);
---

<!doctype html>
<html lang={lang}>
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <NavbarPlexicus
      client:load
      lang={lang}
      fullSiteUrl={`${SITE_URL}:${SITE_PORT}`}
    />
    <HeroMain/>
    <FeaturedArticles featuredPosts={posts.slice(0,3)} />
    <LatestArticles client:load blogPosts={posts}/>
    <FooterPlexicus client:only={true} />
  </body>
</html>
